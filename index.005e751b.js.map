{"mappings":"ACEA,SAAS,gBAAgB,CAAC,YAAY,OAAO,CAAC,SAAC,CAA/C,EACE,EAAG,gBAAgB,CAAC,QAAS,WAC3B,IAAM,EAAY,EAAG,SAAS,CACxB,EAAY,SAAS,aAAa,CAAC,eACnC,EAAO,MAAM,IAAI,CAAC,EAAU,IAAI,EAEtC,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAI,EAAO,EAAK,KAAK,CAAC,EAAU,CAAC,WAAW,CAAC,IAAI,GAC7C,EAAO,EAAK,KAAK,CAAC,EAAU,CAAC,WAAW,CAAC,IAAI,UAEjD,AACE,AAAC,MAAM,EAAK,OAAO,CAAC,QAAS,MAC5B,MAAM,EAAK,OAAO,CAAC,QAAS,KAQxB,EAAK,aAAa,CAAC,GAHjB,AAHP,CAAA,EAAO,WAAW,EAAK,OAAO,CAAC,QAAS,IAAxC,EACA,CAAA,EAAO,WAAW,EAAK,OAAO,CAAC,QAAS,IAAxC,CAMJ,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAU,WAAW,CAAC,E,EAC9C,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.querySelectorAll(\"thead th\").forEach(function(th) {\n    th.addEventListener(\"click\", function() {\n        var cellIndex = th.cellIndex;\n        var tableBody = document.querySelector(\"table tbody\");\n        var rows = Array.from(tableBody.rows);\n        rows.sort(function(row1, row2) {\n            var val1 = row1.cells[cellIndex].textContent.trim();\n            var val2 = row2.cells[cellIndex].textContent.trim();\n            if (!isNaN(val1.replace(/[$,]/g, \"\")) && !isNaN(val2.replace(/[$,]/g, \"\"))) {\n                val1 = parseFloat(val1.replace(/[$,]/g, \"\"));\n                val2 = parseFloat(val2.replace(/[$,]/g, \"\"));\n                return val1 - val2;\n            }\n            return val1.localeCompare(val2);\n        });\n        rows.forEach(function(row) {\n            return tableBody.appendChild(row);\n        });\n    });\n});\n\n//# sourceMappingURL=index.005e751b.js.map\n","'use strict';\n\ndocument.querySelectorAll('thead th').forEach((th) => {\n  th.addEventListener('click', () => {\n    const cellIndex = th.cellIndex;\n    const tableBody = document.querySelector('table tbody');\n    const rows = Array.from(tableBody.rows);\n\n    rows.sort((row1, row2) => {\n      let val1 = row1.cells[cellIndex].textContent.trim();\n      let val2 = row2.cells[cellIndex].textContent.trim();\n\n      if (\n        !isNaN(val1.replace(/[$,]/g, '')) &&\n        !isNaN(val2.replace(/[$,]/g, ''))\n      ) {\n        val1 = parseFloat(val1.replace(/[$,]/g, ''));\n        val2 = parseFloat(val2.replace(/[$,]/g, ''));\n\n        return val1 - val2;\n      }\n\n      return val1.localeCompare(val2);\n    });\n\n    rows.forEach((row) => tableBody.appendChild(row));\n  });\n});\n"],"names":["document","querySelectorAll","forEach","th","addEventListener","cellIndex","tableBody","querySelector","rows","Array","from","sort","row1","row2","val1","cells","textContent","trim","val2","isNaN","replace","localeCompare","parseFloat","row","appendChild"],"version":3,"file":"index.005e751b.js.map"}